<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.BusDAO" >
  <resultMap id="BaseResultMap" type="com.example.demo.entity.Bus" >
    <result column="bus_id" property="busId" jdbcType="INTEGER" />
    <result column="bus_no" property="busNo" jdbcType="VARCHAR" />
    <result column="driver" property="driver" jdbcType="VARCHAR" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="bus_model" property="busModel" jdbcType="INTEGER" />
    <result column="add_name" property="addName" jdbcType="VARCHAR" />
    <result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
    <result column="update_name" property="updateName" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="bus_source" property="busSource" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    bus_id, bus_no, driver, tel, bus_model, add_name, add_time, update_name, update_time,
    remark,bus_source
  </sql>
  <sql id="pagination">
    limit #{offset}, #{limit}
  </sql>
  <insert id="insert" parameterType="com.example.demo.entity.Bus" >
    insert into aub_bus (bus_id, bus_no, driver, 
      tel, bus_model, add_name,
      add_time, update_name, update_time,
      remark,bus_source)
    values (#{busId,jdbcType=INTEGER}, #{busNo,jdbcType=VARCHAR}, #{driver,jdbcType=VARCHAR},
      #{tel,jdbcType=VARCHAR}, #{busModel,jdbcType=INTEGER}, #{addName,jdbcType=VARCHAR},
      #{addTime,jdbcType=TIMESTAMP}, #{updateName,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP},
      #{remark,jdbcType=VARCHAR},#{busSource,jdbcType=VARCHAR})
  </insert>

  <update id="update" parameterType="com.example.demo.entity.Bus" >
    update aub_bus
    <set>
      <if test="busNo != null">
          bus_no = #{busNo},
      </if>
      <if test="driver != null">
        driver = #{driver},
      </if>
      <if test="tel != null">
        tel = #{tel},
      </if>
      <if test="busModel != null">
        bus_model = #{busModel},
      </if>
      <if test="remark != null">
        remark = #{remark},
      </if>
      <if test="busSource != null">
          bus_source = #{busSource},
      </if>
        update_name = #{updateName},
        update_time = #{updateTime},
    </set>
    where bus_id = #{busId}
  </update>

  <delete id="delete" parameterType="com.example.demo.entity.Bus">
    update aub_bus set delete_flag = 1,
    delete_name = #{deleteName},
    delete_time = sysdate()
    where bus_id = #{busId}
  </delete>

  <select id="getListBusCount" parameterType="map" resultType="int" flushCache="false">
    select count(1)
    from aub_bus a where delete_flag = 0
    and not EXISTS (select b.ord_bus_id FROM aub_order_bus b INNER JOIN aub_order c
      on b.ord_id= c.ord_id
      and (c.use_bus_start_time &lt;= #{bus.useBusStartTime,jdbcType=TIMESTAMP}
      and c.use_bus_end_time > #{bus.useBusStartTime,jdbcType=TIMESTAMP})
      or (c.use_bus_start_time &lt;= #{bus.useBusEndTime,jdbcType=TIMESTAMP}
      and c.use_bus_end_time > #{bus.useBusEndTime,jdbcType=TIMESTAMP})
      where a.bus_id=b.bus_id  and b.delete_flag=0)
    <include refid="searchCondition"/>
  </select>

  <sql id="searchCondition">
    <if test="bus.busNo != null and bus.busNo != ''">
      and bus_no like concat('%',#{bus.busNo},'%')
    </if>
    <if test="bus.driver != null and bus.driver != ''">
      and driver like concat('%',#{bus.driver},'%')
    </if>
    <if test="bus.tel != null and bus.tel != ''">
      and tel like concat('%',#{bus.tel},'%')
    </if>
    <if test="bus.busModel != null and bus.busModel != ''">
      and bus_model = #{bus.busModel}
    </if>
    <if test="bus.busSource != null and bus.busSource != ''">
      and bus_source = #{bus.busSource}
    </if>
  </sql>

  <select id="listBus" parameterType="map" resultMap="BaseResultMap" flushCache="false">
    select <include refid="Base_Column_List"/>
    from aub_bus a where delete_flag = 0
    and not EXISTS (select b.ord_bus_id FROM aub_order_bus b INNER JOIN aub_order c
        on b.ord_id= c.ord_id
        and b.delete_flag=0
        and (c.use_bus_start_time &lt;= #{bus.useBusStartTime,jdbcType=TIMESTAMP}
            and c.use_bus_end_time > #{bus.useBusStartTime,jdbcType=TIMESTAMP})
        or (c.use_bus_start_time &lt;= #{bus.useBusEndTime,jdbcType=TIMESTAMP}
            and c.use_bus_end_time > #{bus.useBusEndTime,jdbcType=TIMESTAMP})
        where a.bus_id=b.bus_id and b.delete_flag=0)
     <include refid="searchCondition"/> <include refid="pagination"/>
  </select>

  <select id="getBus" parameterType="long" resultMap="BaseResultMap" flushCache="false">
    select <include refid="Base_Column_List"/>
    from aub_bus where bus_id = #{busId, jdbcType=INTEGER}
  </select>
</mapper>